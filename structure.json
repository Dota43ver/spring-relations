{
  "src": {
    "main": {
      "java": {
        "com": {
          "contactos": {
            "rest": {
              "contactos": {
                "ContactosApplication.java": "package com.contactos.rest.contactos;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.context.annotation.ComponentScan;\n\n@SpringBootApplication\n@ComponentScan(basePackages = \"com.contactos.rest.contactos\")\npublic class ContactosApplication {\n\n\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(ContactosApplication.class, args);\n\t}\n\n}\n",
                "model": {
                  "Contacto.java": "package com.contactos.rest.contactos.model;\r\n\r\n\r\nimport jakarta.persistence.Entity;\r\nimport jakarta.persistence.GeneratedValue;\r\nimport jakarta.persistence.GenerationType;\r\nimport jakarta.persistence.Id;\r\nimport jakarta.persistence.JoinColumn;\r\nimport jakarta.persistence.ManyToOne;\r\nimport jakarta.persistence.Table;\r\n\r\n@Entity\r\n@Table(name = \"contacto\")\r\npublic class Contacto {\r\n\r\n    @Id\r\n    @GeneratedValue(strategy = GenerationType.AUTO)\r\n    private int id;\r\n    private String nombre;\r\n    private String apellido;\r\n    private int edad;\r\n    private Long numero;\r\n\r\n    @ManyToOne\r\n    @JoinColumn(name = \"id_pais\")\r\n    private Pais pais;\r\n    @ManyToOne\r\n    @JoinColumn(name = \"id_estado\")\r\n    private Estado estado;\r\n\r\n    \r\n    public Contacto() {}\r\n\r\n    public Contacto(String nombre, String apellido, int edad, Long numero, Pais pais, Estado estado) {\r\n        this.nombre = nombre;\r\n        this.apellido = apellido;\r\n        this.edad = edad;\r\n        this.numero = numero;\r\n        this.pais = pais;\r\n        this.estado = estado;\r\n    }\r\n    public int getId() {\r\n        return id;\r\n    }\r\n    public void setId(int id) {\r\n        this.id = id;\r\n    }\r\n    public String getNombre() {\r\n        return nombre;\r\n    }\r\n    public void setNombre(String nombre) {\r\n        this.nombre = nombre;\r\n    }\r\n    public String getApellido() {\r\n        return apellido;\r\n    }\r\n    public void setApellido(String apellido) {\r\n        this.apellido = apellido;\r\n    }\r\n    public int getEdad() {\r\n        return edad;\r\n    }\r\n    public void setEdad(int edad) {\r\n        this.edad = edad;\r\n    }\r\n    public Long getNumero() {\r\n        return numero;\r\n    }\r\n    public void setNumero(Long numero) {\r\n        this.numero = numero;\r\n    }\r\n    public Pais getPais() {\r\n        return pais;\r\n    }\r\n    public void setPais(Pais pais) {\r\n        this.pais = pais;\r\n    }\r\n    public Estado getEstado() {\r\n        return estado;\r\n    }\r\n    public void setEstado(Estado estado) {\r\n        this.estado = estado;\r\n    }\r\n\r\n\r\n}\r\n",
                  "Estado.java": "package com.contactos.rest.contactos.model;\r\n\r\nimport jakarta.persistence.Entity;\r\nimport jakarta.persistence.GeneratedValue;\r\nimport jakarta.persistence.GenerationType;\r\nimport jakarta.persistence.Id;\r\nimport jakarta.persistence.JoinColumn;\r\nimport jakarta.persistence.ManyToOne;\r\nimport jakarta.persistence.Table;\r\n\r\n@Entity\r\n@Table(name = \"Estado\")\r\npublic class Estado {\r\n\r\n    @Id\r\n    @GeneratedValue(strategy = GenerationType.AUTO)\r\n    private int id;\r\n\r\n    @ManyToOne\r\n    @JoinColumn(name = \"id_pais\")\r\n    private Pais pais;\r\n    private String nombre;\r\n\r\n    \r\n\r\n    \r\n\r\n    \r\n\r\n    public Estado() {}\r\n\r\n    public Estado(Pais pais, String nombre) {\r\n        this.pais = pais;\r\n        this.nombre = nombre;\r\n    }\r\n    public int getId() {\r\n        return id;\r\n    }\r\n    public void setId(int id) {\r\n        this.id = id;\r\n    }\r\n    public Pais getPais() {\r\n        return pais;\r\n    }\r\n    public void setPais(Pais pais) {\r\n        this.pais = pais;\r\n    }\r\n    public String getNombre() {\r\n        return nombre;\r\n    }\r\n    public void setNombre(String nombre) {\r\n        this.nombre = nombre;\r\n    }\r\n\r\n\r\n    \r\n    \r\n\r\n}\r\n",
                  "Pais.java": "package com.contactos.rest.contactos.model;\r\n\r\nimport jakarta.persistence.Entity;\r\nimport jakarta.persistence.GeneratedValue;\r\nimport jakarta.persistence.GenerationType;\r\nimport jakarta.persistence.Id;\r\nimport jakarta.persistence.Table;\r\n\r\n@Entity\r\n@Table(name = \"Pais\")\r\npublic class Pais {\r\n\r\n    @Id\r\n    @GeneratedValue(strategy = GenerationType.AUTO)\r\n    private int id;\r\n    private String nombre;\r\n\r\n    public Pais() {}\r\n\r\n    \r\n\r\n    public Pais(String nombre) {\r\n        this.nombre = nombre;\r\n    }\r\n    public int getId() {\r\n        return id;\r\n    }\r\n    public void setId(int id) {\r\n        this.id = id;\r\n    }\r\n    public String getNombre() {\r\n        return nombre;\r\n    }\r\n    public void setNombre(String nombre) {\r\n        this.nombre = nombre;\r\n    }\r\n    \r\n\r\n}\r\n"
                },
                "repository": {
                  "ContactoRepository.java": "package com.contactos.rest.contactos.repository;\r\n\r\nimport org.springframework.data.jpa.repository.JpaRepository;\r\n\r\nimport com.contactos.rest.contactos.model.Contacto;\r\n\r\npublic interface ContactoRepository extends JpaRepository<Contacto, Integer>{\r\n\r\n}\r\n",
                  "EstadoRepository.java": "package com.contactos.rest.contactos.repository;\r\n\r\nimport org.springframework.data.jpa.repository.JpaRepository;\r\n\r\nimport com.contactos.rest.contactos.model.Estado;\r\n\r\npublic interface EstadoRepository extends JpaRepository<Estado, Integer>{\r\n\r\n}\r\n",
                  "PaisRepository.java": "package com.contactos.rest.contactos.repository;\r\n\r\nimport org.springframework.data.jpa.repository.JpaRepository;\r\n\r\nimport com.contactos.rest.contactos.model.Pais;\r\n\r\npublic interface PaisRepository extends JpaRepository<Pais, Integer>{\r\n\r\n}\r\n"
                },
                "rest": {
                  "ContactoREST.java": "package com.contactos.rest.contactos.rest;\r\n\r\npublic class ContactoREST {\r\n\r\n}\r\n",
                  "EstadoREST.java": "package com.contactos.rest.contactos.rest;\r\n\r\nimport java.util.List;\r\n\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.GetMapping;\r\nimport org.springframework.web.bind.annotation.PathVariable;\r\nimport org.springframework.web.bind.annotation.RequestMapping;\r\nimport org.springframework.web.bind.annotation.RestController;\r\n\r\nimport com.contactos.rest.contactos.model.Estado;\r\nimport com.contactos.rest.contactos.service.EstadoService;\r\n\r\n@RestController\r\n@RequestMapping (\"/estados/\")\r\npublic class EstadoREST {\r\n\t\r\n\t@Autowired\r\n\tprivate EstadoService estadoService;\r\n\t\r\n\t@GetMapping (\"{id}\")\r\n\tprivate ResponseEntity<List<Estado>> getAllEstadosByPais (@PathVariable(\"id\") int idPais){\r\n\t\treturn ResponseEntity.ok(estadoService.findAllByCountry(idPais));\r\n\t\t\r\n\t}\r\n\r\n}\r\n",
                  "PaisREST.java": "package com.contactos.rest.contactos.rest;\r\n\r\nimport java.util.List;\r\n\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.GetMapping;\r\nimport org.springframework.web.bind.annotation.RequestMapping;\r\nimport org.springframework.web.bind.annotation.RestController;\r\n\r\nimport com.contactos.rest.contactos.model.Pais;\r\nimport com.contactos.rest.contactos.service.PaisService;\r\n\r\n@RestController\r\n@RequestMapping(\"/pais/\")\r\npublic class PaisREST {\r\n\r\n    @Autowired\r\n    private PaisService paisService;\r\n\r\n    @GetMapping\r\n    private ResponseEntity<List<Pais>> getAllPaises(){\r\n        return ResponseEntity.ok(paisService.findAll());\r\n    }\r\n}\r\n"
                },
                "service": {
                  "ContactoService.java": "package com.contactos.rest.contactos.service;\r\n\r\nimport java.util.List;\r\nimport java.util.Optional;\r\nimport java.util.function.Function;\r\n\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.data.domain.Example;\r\nimport org.springframework.data.domain.Page;\r\nimport org.springframework.data.domain.Pageable;\r\nimport org.springframework.data.domain.Sort;\r\nimport org.springframework.data.repository.query.FluentQuery.FetchableFluentQuery;\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport com.contactos.rest.contactos.model.Contacto;\r\nimport com.contactos.rest.contactos.repository.ContactoRepository;\r\n\r\n@Service\r\npublic class ContactoService  implements ContactoRepository{\r\n\r\n    @Autowired\r\n    private ContactoRepository contactoRepository;\r\n\r\n    @Override\r\n    public void deleteAllByIdInBatch(Iterable<Integer> ids) {\r\n        // TODO Auto-generated method stub\r\n        throw new UnsupportedOperationException(\"Unimplemented method 'deleteAllByIdInBatch'\");\r\n    }\r\n\r\n    @Override\r\n    public void deleteAllInBatch() {\r\n        // TODO Auto-generated method stub\r\n        throw new UnsupportedOperationException(\"Unimplemented method 'deleteAllInBatch'\");\r\n    }\r\n\r\n    @Override\r\n    public void deleteAllInBatch(Iterable<Contacto> entities) {\r\n        // TODO Auto-generated method stub\r\n        throw new UnsupportedOperationException(\"Unimplemented method 'deleteAllInBatch'\");\r\n    }\r\n\r\n    @Override\r\n    public <S extends Contacto> List<S> findAll(Example<S> example) {\r\n        // TODO Auto-generated method stub\r\n        throw new UnsupportedOperationException(\"Unimplemented method 'findAll'\");\r\n    }\r\n\r\n    @Override\r\n    public <S extends Contacto> List<S> findAll(Example<S> example, Sort sort) {\r\n        // TODO Auto-generated method stub\r\n        throw new UnsupportedOperationException(\"Unimplemented method 'findAll'\");\r\n    }\r\n\r\n    @Override\r\n    public void flush() {\r\n        // TODO Auto-generated method stub\r\n        throw new UnsupportedOperationException(\"Unimplemented method 'flush'\");\r\n    }\r\n\r\n    @Override\r\n    public Contacto getById(Integer arg0) {\r\n        // TODO Auto-generated method stub\r\n        throw new UnsupportedOperationException(\"Unimplemented method 'getById'\");\r\n    }\r\n\r\n    @Override\r\n    public Contacto getOne(Integer arg0) {\r\n        // TODO Auto-generated method stub\r\n        throw new UnsupportedOperationException(\"Unimplemented method 'getOne'\");\r\n    }\r\n\r\n    @Override\r\n    public Contacto getReferenceById(Integer id) {\r\n        // TODO Auto-generated method stub\r\n        throw new UnsupportedOperationException(\"Unimplemented method 'getReferenceById'\");\r\n    }\r\n\r\n    @Override\r\n    public <S extends Contacto> List<S> saveAllAndFlush(Iterable<S> entities) {\r\n        // TODO Auto-generated method stub\r\n        throw new UnsupportedOperationException(\"Unimplemented method 'saveAllAndFlush'\");\r\n    }\r\n\r\n    @Override\r\n    public <S extends Contacto> S saveAndFlush(S entity) {\r\n        // TODO Auto-generated method stub\r\n        throw new UnsupportedOperationException(\"Unimplemented method 'saveAndFlush'\");\r\n    }\r\n\r\n    @Override\r\n    public List<Contacto> findAll() {\r\n        return contactoRepository.findAll();\r\n        \r\n    }\r\n\r\n    @Override\r\n    public List<Contacto> findAllById(Iterable<Integer> ids) {\r\n        // TODO Auto-generated method stub\r\n        throw new UnsupportedOperationException(\"Unimplemented method 'findAllById'\");\r\n    }\r\n\r\n    @Override\r\n    public <S extends Contacto> List<S> saveAll(Iterable<S> entities) {\r\n        // TODO Auto-generated method stub\r\n        throw new UnsupportedOperationException(\"Unimplemented method 'saveAll'\");\r\n    }\r\n\r\n    @Override\r\n    public long count() {\r\n        // TODO Auto-generated method stub\r\n        throw new UnsupportedOperationException(\"Unimplemented method 'count'\");\r\n    }\r\n\r\n    @Override\r\n    public void delete(Contacto entity) {\r\n        contactoRepository.delete(entity);\r\n    }\r\n\r\n    @Override\r\n    public void deleteAll() {\r\n        // TODO Auto-generated method stub\r\n        throw new UnsupportedOperationException(\"Unimplemented method 'deleteAll'\");\r\n    }\r\n\r\n    @Override\r\n    public void deleteAll(Iterable<? extends Contacto> entities) {\r\n        // TODO Auto-generated method stub\r\n        throw new UnsupportedOperationException(\"Unimplemented method 'deleteAll'\");\r\n    }\r\n\r\n    @Override\r\n    public void deleteAllById(Iterable<? extends Integer> ids) {\r\n        // TODO Auto-generated method stub\r\n        throw new UnsupportedOperationException(\"Unimplemented method 'deleteAllById'\");\r\n    }\r\n\r\n    @Override\r\n    public void deleteById(Integer id) {\r\n        \r\n        contactoRepository.deleteById(id);\r\n\r\n    }\r\n\r\n    @Override\r\n    public boolean existsById(Integer id) {\r\n        // TODO Auto-generated method stub\r\n        throw new UnsupportedOperationException(\"Unimplemented method 'existsById'\");\r\n    }\r\n\r\n    @Override\r\n    public Optional<Contacto> findById(Integer id) {\r\n        // TODO Auto-generated method stub\r\n        throw new UnsupportedOperationException(\"Unimplemented method 'findById'\");\r\n    }\r\n\r\n    @Override\r\n    public <S extends Contacto> S save(S entity) {\r\n    \r\n        return contactoRepository.save(entity);\r\n    }\r\n\r\n    @Override\r\n    public List<Contacto> findAll(Sort sort) {\r\n        // TODO Auto-generated method stub\r\n        throw new UnsupportedOperationException(\"Unimplemented method 'findAll'\");\r\n    }\r\n\r\n    @Override\r\n    public Page<Contacto> findAll(Pageable pageable) {\r\n        // TODO Auto-generated method stub\r\n        throw new UnsupportedOperationException(\"Unimplemented method 'findAll'\");\r\n    }\r\n\r\n    @Override\r\n    public <S extends Contacto> long count(Example<S> example) {\r\n        // TODO Auto-generated method stub\r\n        throw new UnsupportedOperationException(\"Unimplemented method 'count'\");\r\n    }\r\n\r\n    @Override\r\n    public <S extends Contacto> boolean exists(Example<S> example) {\r\n        // TODO Auto-generated method stub\r\n        throw new UnsupportedOperationException(\"Unimplemented method 'exists'\");\r\n    }\r\n\r\n    @Override\r\n    public <S extends Contacto> Page<S> findAll(Example<S> example, Pageable pageable) {\r\n        // TODO Auto-generated method stub\r\n        throw new UnsupportedOperationException(\"Unimplemented method 'findAll'\");\r\n    }\r\n\r\n    @Override\r\n    public <S extends Contacto, R> R findBy(Example<S> example, Function<FetchableFluentQuery<S>, R> queryFunction) {\r\n        // TODO Auto-generated method stub\r\n        throw new UnsupportedOperationException(\"Unimplemented method 'findBy'\");\r\n    }\r\n\r\n    @Override\r\n    public <S extends Contacto> Optional<S> findOne(Example<S> example) {\r\n        // TODO Auto-generated method stub\r\n        throw new UnsupportedOperationException(\"Unimplemented method 'findOne'\");\r\n    }\r\n\r\n}\r\n",
                  "EstadoService.java": "package com.contactos.rest.contactos.service;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Objects;\r\nimport java.util.Optional;\r\nimport java.util.function.Function;\r\nimport java.util.stream.Collectors;\r\n\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.data.domain.Example;\r\nimport org.springframework.data.domain.Page;\r\nimport org.springframework.data.domain.Pageable;\r\nimport org.springframework.data.domain.Sort;\r\nimport org.springframework.data.repository.query.FluentQuery.FetchableFluentQuery;\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport com.contactos.rest.contactos.model.Estado;\r\nimport com.contactos.rest.contactos.repository.EstadoRepository;\r\n\r\n@Service\r\npublic class EstadoService {\r\n\r\n    @Autowired\r\n    private EstadoRepository estadoRepository;\r\n\r\n    public List<Estado> findAll() {\r\n        return estadoRepository.findAll();\r\n    }\r\n\r\n    public List<Estado> findAllByCountry(int countryId) {\r\n        return estadoRepository.findAll().stream()\r\n            .filter(estado -> Objects.equals(estado.getPais().getId(), countryId))\r\n            .collect(Collectors.toList());\r\n    }\r\n    \r\n}\r\n\r\n",
                  "PaisService.java": "package com.contactos.rest.contactos.service;\r\n\r\nimport java.util.List;\r\nimport java.util.Optional;\r\nimport java.util.function.Function;\r\n\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.data.domain.Example;\r\nimport org.springframework.data.domain.Page;\r\nimport org.springframework.data.domain.Pageable;\r\nimport org.springframework.data.domain.Sort;\r\nimport org.springframework.data.repository.query.FluentQuery.FetchableFluentQuery;\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport com.contactos.rest.contactos.model.Pais;\r\nimport com.contactos.rest.contactos.repository.PaisRepository;\r\n\r\n@Service\r\npublic class PaisService implements PaisRepository{\r\n\r\n    @Autowired\r\n    private PaisRepository paisRepository;\r\n\r\n    @Override\r\n    public void deleteAllByIdInBatch(Iterable<Integer> ids) {\r\n        // TODO Auto-generated method stub\r\n        throw new UnsupportedOperationException(\"Unimplemented method 'deleteAllByIdInBatch'\");\r\n    }\r\n\r\n    @Override\r\n    public void deleteAllInBatch() {\r\n        // TODO Auto-generated method stub\r\n        throw new UnsupportedOperationException(\"Unimplemented method 'deleteAllInBatch'\");\r\n    }\r\n\r\n    @Override\r\n    public void deleteAllInBatch(Iterable<Pais> entities) {\r\n        // TODO Auto-generated method stub\r\n        throw new UnsupportedOperationException(\"Unimplemented method 'deleteAllInBatch'\");\r\n    }\r\n\r\n    @Override\r\n    public <S extends Pais> List<S> findAll(Example<S> example) {\r\n        // TODO Auto-generated method stub\r\n        throw new UnsupportedOperationException(\"Unimplemented method 'findAll'\");\r\n    }\r\n\r\n    @Override\r\n    public <S extends Pais> List<S> findAll(Example<S> example, Sort sort) {\r\n        // TODO Auto-generated method stub\r\n        throw new UnsupportedOperationException(\"Unimplemented method 'findAll'\");\r\n    }\r\n\r\n    @Override\r\n    public void flush() {\r\n        // TODO Auto-generated method stub\r\n        throw new UnsupportedOperationException(\"Unimplemented method 'flush'\");\r\n    }\r\n\r\n    @Override\r\n    public Pais getById(Integer arg0) {\r\n        // TODO Auto-generated method stub\r\n        throw new UnsupportedOperationException(\"Unimplemented method 'getById'\");\r\n    }\r\n\r\n    @Override\r\n    public Pais getOne(Integer arg0) {\r\n        // TODO Auto-generated method stub\r\n        throw new UnsupportedOperationException(\"Unimplemented method 'getOne'\");\r\n    }\r\n\r\n    @Override\r\n    public Pais getReferenceById(Integer id) {\r\n        // TODO Auto-generated method stub\r\n        throw new UnsupportedOperationException(\"Unimplemented method 'getReferenceById'\");\r\n    }\r\n\r\n    @Override\r\n    public <S extends Pais> List<S> saveAllAndFlush(Iterable<S> entities) {\r\n        // TODO Auto-generated method stub\r\n        throw new UnsupportedOperationException(\"Unimplemented method 'saveAllAndFlush'\");\r\n    }\r\n\r\n    @Override\r\n    public <S extends Pais> S saveAndFlush(S entity) {\r\n        // TODO Auto-generated method stub\r\n        throw new UnsupportedOperationException(\"Unimplemented method 'saveAndFlush'\");\r\n    }\r\n\r\n    @Override\r\n    public List<Pais> findAll() {\r\n        return paisRepository.findAll();\r\n    }\r\n\r\n    @Override\r\n    public List<Pais> findAllById(Iterable<Integer> ids) {\r\n        // TODO Auto-generated method stub\r\n        throw new UnsupportedOperationException(\"Unimplemented method 'findAllById'\");\r\n    }\r\n\r\n    @Override\r\n    public <S extends Pais> List<S> saveAll(Iterable<S> entities) {\r\n        // TODO Auto-generated method stub\r\n        throw new UnsupportedOperationException(\"Unimplemented method 'saveAll'\");\r\n    }\r\n\r\n    @Override\r\n    public long count() {\r\n        // TODO Auto-generated method stub\r\n        throw new UnsupportedOperationException(\"Unimplemented method 'count'\");\r\n    }\r\n\r\n    @Override\r\n    public void delete(Pais entity) {\r\n        // TODO Auto-generated method stub\r\n        throw new UnsupportedOperationException(\"Unimplemented method 'delete'\");\r\n    }\r\n\r\n    @Override\r\n    public void deleteAll() {\r\n        // TODO Auto-generated method stub\r\n        throw new UnsupportedOperationException(\"Unimplemented method 'deleteAll'\");\r\n    }\r\n\r\n    @Override\r\n    public void deleteAll(Iterable<? extends Pais> entities) {\r\n        // TODO Auto-generated method stub\r\n        throw new UnsupportedOperationException(\"Unimplemented method 'deleteAll'\");\r\n    }\r\n\r\n    @Override\r\n    public void deleteAllById(Iterable<? extends Integer> ids) {\r\n        // TODO Auto-generated method stub\r\n        throw new UnsupportedOperationException(\"Unimplemented method 'deleteAllById'\");\r\n    }\r\n\r\n    @Override\r\n    public void deleteById(Integer id) {\r\n        // TODO Auto-generated method stub\r\n        throw new UnsupportedOperationException(\"Unimplemented method 'deleteById'\");\r\n    }\r\n\r\n    @Override\r\n    public boolean existsById(Integer id) {\r\n        // TODO Auto-generated method stub\r\n        throw new UnsupportedOperationException(\"Unimplemented method 'existsById'\");\r\n    }\r\n\r\n    @Override\r\n    public Optional<Pais> findById(Integer id) {\r\n        // TODO Auto-generated method stub\r\n        throw new UnsupportedOperationException(\"Unimplemented method 'findById'\");\r\n    }\r\n\r\n    @Override\r\n    public <S extends Pais> S save(S entity) {\r\n        return paisRepository.save(entity); \r\n    }\r\n\r\n    @Override\r\n    public List<Pais> findAll(Sort sort) {\r\n        // TODO Auto-generated method stub\r\n        throw new UnsupportedOperationException(\"Unimplemented method 'findAll'\");\r\n    }\r\n\r\n    @Override\r\n    public Page<Pais> findAll(Pageable pageable) {\r\n        // TODO Auto-generated method stub\r\n        throw new UnsupportedOperationException(\"Unimplemented method 'findAll'\");\r\n    }\r\n\r\n    @Override\r\n    public <S extends Pais> long count(Example<S> example) {\r\n        // TODO Auto-generated method stub\r\n        throw new UnsupportedOperationException(\"Unimplemented method 'count'\");\r\n    }\r\n\r\n    @Override\r\n    public <S extends Pais> boolean exists(Example<S> example) {\r\n        // TODO Auto-generated method stub\r\n        throw new UnsupportedOperationException(\"Unimplemented method 'exists'\");\r\n    }\r\n\r\n    @Override\r\n    public <S extends Pais> Page<S> findAll(Example<S> example, Pageable pageable) {\r\n        // TODO Auto-generated method stub\r\n        throw new UnsupportedOperationException(\"Unimplemented method 'findAll'\");\r\n    }\r\n\r\n    @Override\r\n    public <S extends Pais, R> R findBy(Example<S> example, Function<FetchableFluentQuery<S>, R> queryFunction) {\r\n        // TODO Auto-generated method stub\r\n        throw new UnsupportedOperationException(\"Unimplemented method 'findBy'\");\r\n    }\r\n\r\n    @Override\r\n    public <S extends Pais> Optional<S> findOne(Example<S> example) {\r\n        // TODO Auto-generated method stub\r\n        throw new UnsupportedOperationException(\"Unimplemented method 'findOne'\");\r\n    }\r\n\r\n}\r\n"
                }
              }
            }
          }
        }
      },
      "resources": {
        "application.properties": "spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect\nspring.jpa.hibernate.ddl-auto=update\nspring.application.name=contactos\nspring.config.import=optional:file:.env[.properties]\nspring.profiles.active=${MYENV}\nspring.datasource.url=${SPRING_DATASOURCE_URL}\nspring.datasource.username=${SPRING_DATASOURCE_USERNAME}\nspring.datasource.password=${SPRING_DATASOURCE_PASSWORD}\n# spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true\nmanagement.endpoints.web.exposure.include=mappings\n\n"
      }
    },
    "test": {
      "java": {
        "com": {
          "contactos": {
            "rest": {
              "contactos": {
                "ContactosApplicationTests.java": "package com.contactos.rest.contactos;\n\nimport org.junit.jupiter.api.Test;\nimport org.springframework.boot.test.context.SpringBootTest;\n\n@SpringBootTest\nclass ContactosApplicationTests {\n\n\t@Test\n\tvoid contextLoads() {\n\t}\n\n}\n"
              }
            }
          }
        }
      }
    }
  }
}